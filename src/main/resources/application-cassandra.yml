cassandra:
  host: localhost
  port: 9042
  user: cassandra
  pass: cassandra
  datacenter: datacenter1
  max-id-query: 'SELECT MAX(id) as id FROM wines.wine' # query that returns maximum ID of the table used for INSERT ( universal autoincrement logic implementation ).
  # list of com.akg.dbperfcheck.config.pojo.Query objects used for the READ operations
  search-queries:
    - {
       name: findByCountry, # name of the query
       exec: 'select * from wines.wine where country = ''?1'' ALLOW FILTERING', # actual query
       percentage: 15, # this is the percentage of executions of this query among all executed queries
       params: [
                 {param1: Bulgaria},{param1: Romania},{param1: Greece},{param1: Macedonia},{param1: Turkey},{param1: Germany},{param1: France},{param1: Italy},{param1: Austria},{param1: Spain},{param1: Portugal},{param1: Argentina}
               ] # predefined parameter values, one of them randomly will be picked up and pass to the query above
      }
    - {
       name: findByPoints,
       exec: 'select * from wines.wine where points = ?1 ALLOW FILTERING',
       percentage: 15,
       params: [
                 {param1: 91},{param1: 92},{param1: 93},{param1: 94},{param1: 95},{param1: 96},{param1: 97},{param1: 98},{param1: 99},{param1: 100}
               ]
      }
    - {
       name: findByPrice,
       exec: 'select * from wines.wine where price = ?1 ALLOW FILTERING',
       percentage: 15,
       params: [
                 {param1: 90},{param1: 91},{param1: 92},{param1: 93},{param1: 94},{param1: 95},{param1: 96},{param1: 97},{param1: 98},{param1: 99},{param1: 100},{param1: 200},{param1: 500},{param1: 1000},{param1: 2000}
               ]
      }
    - {
       name: findByCountryAndPoints,
       exec: 'select * from wines.wine where country = ''?1'' and points = ?2 ALLOW FILTERING',
       percentage: 25,
       params: [
                 {param1: Bulgaria, param2: 96},{param1: Bulgaria, param2: 97},{param1: Bulgaria, param2: 98},{param1: Bulgaria, param2: 99},{param1: Bulgaria, param2: 100},
                 {param1: Romania,  param2: 96},{param1: Romania, param2: 97},{param1: Romania, param2: 98},{param1: Romania, param2: 99},{param1: Romania, param2: 100},
                 {param1: Greece, param2: 96},{param1: Greece, param2: 97},{param1: Greece, param2: 98},{param1: Greece, param2: 99},{param1: Greece, param2: 100},
                 {param1: Macedonia, param2: 96},{param1: Macedonia, param2: 97},{param1: Macedonia, param2: 98},{param1: Macedonia, param2: 99},{param1: Macedonia, param2: 100},
                 {param1: Turkey, param2: 96},{param1: Turkey, param2: 97},{param1: Turkey, param2: 98},{param1: Turkey, param2: 99},{param1: Turkey, param2: 100},
                 {param1: Germany, param2: 96},{param1: Germany, param2: 97},{param1: Germany, param2: 98},{param1: Germany, param2: 99},{param1: Germany, param2: 100},
                 {param1: France, param2: 96},{param1: France, param2: 97},{param1: France, param2: 98},{param1: France, param2: 99},{param1: France, param2: 100},
                 {param1: Italy, param2: 96},{param1: Italy, param2: 97},{param1: Italy, param2: 98},{param1: Italy, param2: 99},{param1: Italy, param2: 100},
                 {param1: Austria, param2: 96},{param1: Austria, param2: 97},{param1: Austria, param2: 98},{param1: Austria, param2: 99},{param1: Austria, param2: 100},
                 {param1: Spain, param2: 96},{param1: Spain, param2: 97},{param1: Spain, param2: 98},{param1: Spain, param2: 99},{param1: Spain, param2: 100},
                 {param1: Portugal, param2: 96},{param1: Portugal, param2: 97},{param1: Portugal, param2: 98},{param1: Portugal, param2: 99},{param1: Portugal, param2: 100},
                 {param1: Argentina, param2: 96},{param1: Argentina, param2: 97},{param1: Argentina, param2: 98},{param1: Argentina, param2: 99},{param1: Argentina, param2: 100},
                 {param1: Australia, param2: 96},{param1: Australia, param2: 97},{param1: Australia, param2: 98},{param1: Australia, param2: 99},{param1: Australia, param2: 100},
                 {param1: Chile, param2: 96},{param1: Chile, param2: 97},{param1: Chile, param2: 98},{param1: Chile, param2: 99},{param1: Chile, param2: 100},
                 {param1: Serbia, param2: 96},{param1: Serbia, param2: 97},{param1: Serbia, param2: 98},{param1: Serbia, param2: 99},{param1: Serbia, param2: 100}
               ]
      }
    - {
        name: findAggregations,
        exec: 'select min(price),max(price),avg(price),count(*) from wines.wine ALLOW FILTERING',
       percentage: 15,
       params: []
      }
    - {
        name: findCountAndGroupByCountry,
        exec: 'select count(*) from wines.wine ALLOW FILTERING',
       percentage: 15,
       params: []
      }
  update-queries: # list of com.akg.dbperfcheck.config.pojo.Query objects used for the UPDATE queries
    - {
        name: updatePointsByCountry, # name of the query
        exec: 'update wines.wine
               set points = 96
               where id = ? IF EXISTS', # the actual query
        percentage: 40, # this is the percentage of executions of this query among all executed queries
        params: [
                  {param1: Bulgaria},{param1: Romania},{param1: Greece},{param1: Macedonia},{param1: Turkey},{param1: Germany},{param1: France},{param1: Italy},{param1: Austria},{param1: Spain},{param1: Portugal},{param1: Argentina}
                ], # predefined parameter values, one of them randomly will be picked up and pass to the query above
        # this is an additional query used to help the process for the actual query in the current '' property
        # in this example the result from 'additional-exec' is pass to the actual update query in 'exec'
        additional-exec: 'select id from wines.wine where country = ''?1'' ALLOW FILTERING'
      }
    - {
        name: updatePricesByCountry,
        exec: 'update wines.wine
               set points = 10
               where id = ? IF EXISTS',
        percentage: 15,
        params: [
                  {param1: Bulgaria},{param1: Romania},{param1: Greece},{param1: Macedonia},{param1: Turkey},{param1: Germany},{param1: France},{param1: Italy},{param1: Austria},{param1: Spain},{param1: Portugal},{param1: Argentina}
                ],
        additional-exec: 'select id from wines.wine where country = ''?1'' ALLOW FILTERING'
      }
    - {
        name: updatePointsByVariety,
        exec: 'update wines.wine
               set points = 96
               where id = ? IF EXISTS',
        percentage: 15,
        params: [
                  {param1: Mavrud},{param1: Ruen},{param1: Cabernet Sauvignon},{param1: Red Blend},{param1: Bordeaux-style Red Blend},{param1: Sauvignon Blanc},{param1: Syrah},{param1: Riesling},{param1: Merlot},{param1: Zinfandel}
                ],
        additional-exec: 'select id from wines.wine where variety = ''?1'' ALLOW FILTERING'
      }
    - {
        name: updatePricesByVariety,
        exec: 'update wines.wine
               set price = 11
               where id = ? IF EXISTS',
        percentage: 15,
        params: [
                  {param1: Mavrud},{param1: Ruen},{param1: Cabernet Sauvignon},{param1: Red Blend},{param1: Bordeaux-style Red Blend},{param1: Sauvignon Blanc},{param1: Syrah},{param1: Riesling},{param1: Merlot},{param1: Zinfandel}
                ],
        additional-exec: 'select id from wines.wine where variety = ''?1'' ALLOW FILTERING'
      }  
    - {
        name: updatePricesByProvince ,
        exec: 'update wines.wine
               set price = 15
               where id = ? IF EXISTS',
        percentage: 15,
        params: [
                  {param1: Thracian Valley},{param1: Washington},{param1: Tuscany},{param1: Bordeaux},{param1: Northern Spain},{param1: Mendoza Province},{param1: Burgundy},{param1: Piedmont},{param1: Veneto}
                ],
        additional-exec: 'select id from wines.wine where province = ''?1'' ALLOW FILTERING'
      }
  delete-queries: # list of com.akg.dbperfcheck.config.pojo.Query objects used for the DELETE queries
    - {
       name: deleteByCountry, # name of the query
       exec: 'delete from wines.wine
               where id = ? IF EXISTS', # the actual query
       params: [
                 {param1: Italy},{param1: Slovenia},{param1: Serbia}
               ], # predefined parameter values, one of them randomly will be picked up and pass to the query above
       # this is an additional query used to help the process for the actual query in the current '' property
       # in this example the result from 'additional-exec' is pass to the actual update query in 'exec'
       additional-exec: 'select id from wines.wine where country = ''?1'' ALLOW FILTERING'
      }
    - {
       name: deleteByPoints,
       exec: 'delete from wines.wine
               where id = ? IF EXISTS',
       params: [
                 {param1: 84},{param1: 85},{param1: 86}
               ],
       additional-exec: 'select id from wines.wine where points = ?1 ALLOW FILTERING'
      }
    - {
       name: deleteByPrice,
       exec: 'delete from wines.wine
               where id = ? IF EXISTS',
       params: [
                 {param1: 15},{param1: 16},{param1: 17}
               ],
       additional-exec: 'select id from wines.wine where price = ?1 ALLOW FILTERING'
      }